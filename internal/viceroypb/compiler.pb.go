// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: compiler.proto

package viceroypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stream int32

const (
	Stream_STREAM_UNKNOWN Stream = 0
	Stream_STREAM_STDOUT  Stream = 1
	Stream_STREAM_STDERR  Stream = 2
)

// Enum value maps for Stream.
var (
	Stream_name = map[int32]string{
		0: "STREAM_UNKNOWN",
		1: "STREAM_STDOUT",
		2: "STREAM_STDERR",
	}
	Stream_value = map[string]int32{
		"STREAM_UNKNOWN": 0,
		"STREAM_STDOUT":  1,
		"STREAM_STDERR":  2,
	}
)

func (x Stream) Enum() *Stream {
	p := new(Stream)
	*p = x
	return p
}

func (x Stream) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stream) Descriptor() protoreflect.EnumDescriptor {
	return file_compiler_proto_enumTypes[0].Descriptor()
}

func (Stream) Type() protoreflect.EnumType {
	return &file_compiler_proto_enumTypes[0]
}

func (x Stream) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stream.Descriptor instead.
func (Stream) EnumDescriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{0}
}

type CommandState int32

const (
	// Invalid CommandState.
	CommandState_COMMAND_STATE_INVALID CommandState = 0
	// The command has been created but not started.
	CommandState_COMMAND_STATE_CREATED CommandState = 1
	// The command has been started but is still running.
	CommandState_COMMAND_STATE_RUNNING CommandState = 2
	// The command has completed.
	CommandState_COMMAND_STATE_EXITED CommandState = 3
	// The command was aborted.
	CommandState_COMMAND_STATE_ABORTED CommandState = 4
	// The command failed.
	CommandState_COMMAND_STATE_FAILED CommandState = 5
)

// Enum value maps for CommandState.
var (
	CommandState_name = map[int32]string{
		0: "COMMAND_STATE_INVALID",
		1: "COMMAND_STATE_CREATED",
		2: "COMMAND_STATE_RUNNING",
		3: "COMMAND_STATE_EXITED",
		4: "COMMAND_STATE_ABORTED",
		5: "COMMAND_STATE_FAILED",
	}
	CommandState_value = map[string]int32{
		"COMMAND_STATE_INVALID": 0,
		"COMMAND_STATE_CREATED": 1,
		"COMMAND_STATE_RUNNING": 2,
		"COMMAND_STATE_EXITED":  3,
		"COMMAND_STATE_ABORTED": 4,
		"COMMAND_STATE_FAILED":  5,
	}
)

func (x CommandState) Enum() *CommandState {
	p := new(CommandState)
	*p = x
	return p
}

func (x CommandState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandState) Descriptor() protoreflect.EnumDescriptor {
	return file_compiler_proto_enumTypes[1].Descriptor()
}

func (CommandState) Type() protoreflect.EnumType {
	return &file_compiler_proto_enumTypes[1]
}

func (x CommandState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandState.Descriptor instead.
func (CommandState) EnumDescriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{1}
}

// Empty message to use for messages that don't yet need any fields.
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compiler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_compiler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{0}
}

// CommandRequest executes a command.
type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the command to execute, e.g., clang.
	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	// Arguments passed to the compilation. The program name is not included.
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// The environment passed to the compilation. Should be provided in key=value
	// form. This specifies the full set of environment variables used when
	// invoking the compiler.
	Environ []string `protobuf:"bytes,3,rep,name=environ,proto3" json:"environ,omitempty"`
	// The working directory to use for the command.
	Wd string `protobuf:"bytes,4,opt,name=wd,proto3" json:"wd,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compiler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compiler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{1}
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CommandRequest) GetEnviron() []string {
	if x != nil {
		return x.Environ
	}
	return nil
}

func (x *CommandRequest) GetWd() string {
	if x != nil {
		return x.Wd
	}
	return ""
}

type CommandHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Internal ID of the handle.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommandHandle) Reset() {
	*x = CommandHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compiler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandHandle) ProtoMessage() {}

func (x *CommandHandle) ProtoReflect() protoreflect.Message {
	mi := &file_compiler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandHandle.ProtoReflect.Descriptor instead.
func (*CommandHandle) Descriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{2}
}

func (x *CommandHandle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TailCommandData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A fragment of data from tailed logs.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The stream this data is from.
	Stream Stream `protobuf:"varint,2,opt,name=stream,proto3,enum=viceroy.v1.Stream" json:"stream,omitempty"`
}

func (x *TailCommandData) Reset() {
	*x = TailCommandData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compiler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TailCommandData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TailCommandData) ProtoMessage() {}

func (x *TailCommandData) ProtoReflect() protoreflect.Message {
	mi := &file_compiler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TailCommandData.ProtoReflect.Descriptor instead.
func (*TailCommandData) Descriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{3}
}

func (x *TailCommandData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TailCommandData) GetStream() Stream {
	if x != nil {
		return x.Stream
	}
	return Stream_STREAM_UNKNOWN
}

type CommandStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The request associated with the handle.
	Request *CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// State of the command.
	State CommandState `protobuf:"varint,2,opt,name=state,proto3,enum=viceroy.v1.CommandState" json:"state,omitempty"`
	// Set to the exit code of the program once the command has exited.
	ExitCode int32 `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *CommandStatus) Reset() {
	*x = CommandStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compiler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandStatus) ProtoMessage() {}

func (x *CommandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_compiler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandStatus.ProtoReflect.Descriptor instead.
func (*CommandStatus) Descriptor() ([]byte, []int) {
	return file_compiler_proto_rawDescGZIP(), []int{4}
}

func (x *CommandStatus) GetRequest() *CommandRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CommandStatus) GetState() CommandState {
	if x != nil {
		return x.State
	}
	return CommandState_COMMAND_STATE_INVALID
}

func (x *CommandStatus) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

var File_compiler_proto protoreflect.FileDescriptor

var file_compiler_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x68, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x77, 0x64, 0x22,
	0x1f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x51, 0x0a, 0x0f, 0x54, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x63,
	0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0x42, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d,
	0x5f, 0x53, 0x54, 0x44, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x52,
	0x45, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x44, 0x45, 0x52, 0x52, 0x10, 0x02, 0x2a, 0xae, 0x01, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x32, 0x9e, 0x02,
	0x0a, 0x06, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x63, 0x65,
	0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x47, 0x0a, 0x0b, 0x54, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x19, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x63,
	0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x76, 0x69, 0x63, 0x65,
	0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x19, 0x2e, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x11, 0x2e, 0x76, 0x69,
	0x63, 0x65, 0x72, 0x6f, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2f,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x66, 0x72,
	0x61, 0x74, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x69, 0x63, 0x65, 0x72, 0x6f, 0x79, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compiler_proto_rawDescOnce sync.Once
	file_compiler_proto_rawDescData = file_compiler_proto_rawDesc
)

func file_compiler_proto_rawDescGZIP() []byte {
	file_compiler_proto_rawDescOnce.Do(func() {
		file_compiler_proto_rawDescData = protoimpl.X.CompressGZIP(file_compiler_proto_rawDescData)
	})
	return file_compiler_proto_rawDescData
}

var file_compiler_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_compiler_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_compiler_proto_goTypes = []interface{}{
	(Stream)(0),             // 0: viceroy.v1.Stream
	(CommandState)(0),       // 1: viceroy.v1.CommandState
	(*Empty)(nil),           // 2: viceroy.v1.Empty
	(*CommandRequest)(nil),  // 3: viceroy.v1.CommandRequest
	(*CommandHandle)(nil),   // 4: viceroy.v1.CommandHandle
	(*TailCommandData)(nil), // 5: viceroy.v1.TailCommandData
	(*CommandStatus)(nil),   // 6: viceroy.v1.CommandStatus
}
var file_compiler_proto_depIdxs = []int32{
	0, // 0: viceroy.v1.TailCommandData.stream:type_name -> viceroy.v1.Stream
	3, // 1: viceroy.v1.CommandStatus.request:type_name -> viceroy.v1.CommandRequest
	1, // 2: viceroy.v1.CommandStatus.state:type_name -> viceroy.v1.CommandState
	3, // 3: viceroy.v1.Runner.CreateCommand:input_type -> viceroy.v1.CommandRequest
	4, // 4: viceroy.v1.Runner.TailCommand:input_type -> viceroy.v1.CommandHandle
	4, // 5: viceroy.v1.Runner.StartCommand:input_type -> viceroy.v1.CommandHandle
	4, // 6: viceroy.v1.Runner.DeleteCommand:input_type -> viceroy.v1.CommandHandle
	4, // 7: viceroy.v1.Runner.CreateCommand:output_type -> viceroy.v1.CommandHandle
	5, // 8: viceroy.v1.Runner.TailCommand:output_type -> viceroy.v1.TailCommandData
	6, // 9: viceroy.v1.Runner.StartCommand:output_type -> viceroy.v1.CommandStatus
	2, // 10: viceroy.v1.Runner.DeleteCommand:output_type -> viceroy.v1.Empty
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_compiler_proto_init() }
func file_compiler_proto_init() {
	if File_compiler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compiler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compiler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compiler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compiler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TailCommandData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compiler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compiler_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_compiler_proto_goTypes,
		DependencyIndexes: file_compiler_proto_depIdxs,
		EnumInfos:         file_compiler_proto_enumTypes,
		MessageInfos:      file_compiler_proto_msgTypes,
	}.Build()
	File_compiler_proto = out.File
	file_compiler_proto_rawDesc = nil
	file_compiler_proto_goTypes = nil
	file_compiler_proto_depIdxs = nil
}
